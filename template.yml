AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Issue ticketing application

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        TICKET_TABLE: !Ref Tickets
        TICKET_REPLY_TABLE: !Ref TicketReplies
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 100

Resources:
  createTicketFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/create-ticket.createTicketHandler
      Description: Create issue ticket
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Tickets
        - SNSPublishMessagePolicy:
            TopicName: !Ref NotificationTopic
      Events:
        Api:
          Type: Api
          Properties:
            Path: /ticket
            Method: POST

  msgSlackFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/msg-slack.messageSlackHandler
      Description: trigger new message in slack using webhook
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Tickets
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref NotificationTopic

  replyTicketFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/reply-ticket.replyTicketHandler
      Description: Adds a reply to a given ticket
      Events:
        Api:
          Type: Api
          Properties:
            Path: /ticket/{id}/reply
            Method: POST

  resolveTicketFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/resolve-ticket.resolveTicketHandler
      Description: Resolves a given ticket
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Tickets
      Events:
        Api:
          Type: Api
          Properties:
            Path: /ticket/{id}
            Method: PUT

  Tickets:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  TicketReplies:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: NewTicketCreated

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
