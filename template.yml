AWSTemplateFormatVersion: 2010-09-09
Description: >-
  aws-sam-typescript-layers-example

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        SAMPLE_TABLE: !Ref SampleTable
        ITEM_QUEUE: !Ref WriteQueue
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 100

Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/get-all-items.getAllItemsHandler
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  getByIdFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/get-by-id.getByIdHandler
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/put-item.putItemHandler
      Description: A simple example includes a HTTP post method to add one item to an SQS queue (to be written to a DynamoDB table later).
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt WriteQueue.QueueName
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  writeItemFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/write-item.writeItemHandler
      Description: A simple example includes an SQS subscription to write queued object to DynamoDB
      Timeout: 25
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt WriteQueue.Arn
            BatchSize: 1

  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
